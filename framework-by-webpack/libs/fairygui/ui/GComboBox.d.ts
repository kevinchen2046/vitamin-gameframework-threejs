import { Controller } from "./Controller";
import { PopupDirection } from "./FieldTypes";
import { GComponent } from "./GComponent";
import { GList } from "./GList";
import { GObject } from "./GObject";
import { GTextField } from "./GTextField";
import { ByteBuffer } from "../utils/ByteBuffer";
export declare class GComboBox extends GComponent {
    dropdown: GComponent;
    popupDirection: PopupDirection;
    visibleItemCount: number;
    protected _titleObject: GObject;
    protected _iconObject: GObject;
    protected _list: GList;
    protected _items: string[];
    protected _icons?: string[];
    protected _values: string[];
    private _itemsUpdated;
    private _selectedIndex;
    private _buttonController;
    private _selectionController;
    private _down;
    private _over;
    constructor();
    get text(): string;
    set text(value: string);
    get titleColor(): number;
    set titleColor(value: number);
    get titleFontSize(): number;
    set titleFontSize(value: number);
    get icon(): string;
    set icon(value: string);
    get items(): string[];
    set items(value: string[]);
    get icons(): string[];
    set icons(value: string[]);
    get values(): string[];
    set values(value: string[]);
    get selectedIndex(): number;
    set selectedIndex(val: number);
    get value(): string;
    set value(val: string);
    getTextField(): GTextField;
    protected setState(val: string): void;
    protected setCurrentState(): void;
    get selectionController(): Controller;
    set selectionController(value: Controller);
    handleControllerChanged(c: Controller): void;
    private updateSelectionController;
    dispose(): void;
    getProp(index: number): any;
    setProp(index: number, value: any): void;
    protected constructExtension(buffer: ByteBuffer): void;
    setup_afterAdd(buffer: ByteBuffer, beginPos: number): void;
    protected showDropdown(): void;
    private __popupWinClosed;
    private __clickItem;
    private __rollover;
    private __rollout;
    private __mousedown;
    private __mouseup;
}
